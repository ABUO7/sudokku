// // Board представляет поле Sudoku как двумерный срез (матрицу) целых чисел
// // Размер 9x9, где 0 — это пустая ячейка

package sudoku // объявляем пакет sudoku

import "fmt" // подключаем стандартный пакет для вывода на экран

// // ParseBoard получает список строк (каждая строка длиной 9 символов)
// // и преобразует его в матрицу ([][]int), где '.' заменяется на 0
// ParseBoard — функция для преобразования входных данных (списка строк)
// в двумерный массив ([][]int), где '.' означает пустую клетку (0)
// Возвращает поле и ошибку (если формат некорректен)
func ParseBoard(args []string) ([][]int, error) {
	if len(args) != 9 { // проверяем, что передано ровно 9 строк
		return nil, fmt.Errorf("Error") // если нет — возвращаем ошибку
	}

	board := make([][]int, 9) // создаём 9 строк
	for i := 0; i < 9; i++ {  // проходим по каждой строке
		if len(args[i]) != 9 { // строка должна содержать ровно 9 символов
			return nil, fmt.Errorf("Error") // если нет — ошибка
		}
		board[i] = make([]int, 9) // создаём строку из 9 элементов

		for j := 0; j < 9; j++ { // проходим по каждому символу строки
			ch := args[i][j] // получаем текущий символ

			if ch == '.' { // если символ — точка, значит клетка пустая
				board[i][j] = 0 // записываем 0 в клетку
			} else if ch >= '1' && ch <= '9' { // если это цифра от 1 до 9
				board[i][j] = int(ch - '0') // преобразуем символ в число и сохраняем
			} else {
				return nil, fmt.Errorf("Error") // если символ невалиден — возвращаем ошибку
			}
		}
	}
	return board, nil // возвращаем готовую доску и nil (ошибки нет)
}

// PrintBoard — функция для печати игрового поля Sudoku
// принимает двумерный срез [][]int размером 9x9
func PrintBoard(board [][]int) {
	for i := 0; i < 9; i++ { // внешний цикл по строкам доски от 0 до 8
		for j := 0; j < 9; j++ { // внутренний цикл по столбцам от 0 до 8
			fmt.Print(board[i][j]) // печатаем значение текущей ячейки
			if j < 8 {
				fmt.Print(" ") // если это не последний столбец — добавляем пробел
			}
		}
		fmt.Println() // после каждой строки делаем перевод строки
	}
}
